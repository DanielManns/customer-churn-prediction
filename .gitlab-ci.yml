image: python:3.10.7

workflow:
  rules:
    -if: $CI_COMMIT_BRANCH

stages:
  - build
  - test
  - deploy

.docker:
  image: docker:stable
  tags:
    - docker
  variables:
    DOCKER_SVA_REGISTRY: registry.labda.sva.de
    DOCKER_SVA_PROJECT: ds-challenge-daniel-manns
    DOCKER_IMAGE: dsc-dmanns
    DOCKER_BUILDKIT: 1
    DOCKER_IMAGE_FULL_SPECIFIER: $DOCKER_SVA_REGISTRY/$DOCKER_SVA_PROJECT/$DOCKER_IMAGE
  before_script:
    - cat $DOCKER_SVA_PW | docker login -u $DOCKER_SVA_USER --password-stdin $DOCKER_SVA_REGISTRY

.build-docker-image:
  extends: .docker
  stage: build
  variables:
    DOCKER_TAG: $DOCKER_PYTHON_VERSION-$DOCKER_BUILD_TARGET
  script:
    - docker pull $DOCKER_IMAGE_FULL_SPECIFIER:$DOCKER_TAG || true
    - docker pull $DOCKER_IMAGE_FULL_SPECIFIER:DOCKER_TAG || true
    - docker build --cache-from $DOCKER_IMAGE_FULL_SPECIFIER:$DOCKER_TAG
                   --tag $DOCKER_IMAGE_FULL_SPECIFIER:$DOCKER_PYTHON_VERSION-builder
                   --build_ARG BUILDKIT_INLINE_CACHE=1
                   --build-arg PYTHON_VERSION=$DOCKER_PYTHON_VERSION
                   --target builder .
    - docker build --cache-from $DOCKER_IMAGE_FULL_SPECIFIER_$DOCKER_PYTHON_VERSION-builder
                   --cache-from $DOCKER_IMAGE_FULL_SPECIFIER_$DOCKER_TAG
                   --tag $DOCKER_IMAGE_FULL_SPECIFIER:$DOCKER_TAG
                   --build-arg BUILDKIT_INLINE_CACHE=1
                   --build-arg PYTHON_VERSION=$DOCKER_PYTHON_VERSION
                   --target $DOCKER_BUILD_TARGET .
    - docker push $DOCKER_IMAGE_FULL_SPECIFIER:$DOCKER_PYTHON_VERSION-builder
    - docker push $DOCKER_IMAGE_FULL_SPECIFIER:$DOCKER_TAG


# in yanniks version, three times, because three different builders in dockerfile

.build-docker-image-dev:
  extends: .build-docker-image
  variables:
    DOCKER_BUILD_TAREGT: dev

.build-docker-image-prod:
  extends: .build-docker-image
  variables:
    DOCKER_BUILD_TARGET: prod

build-docker-image-dev:
  extends: .build-docker-image-dev
  variables:
    DOCKER_PYTHON_VERSION: "3.10.7"

build-docker-image-prod:
  extends: .build-docker-image-prod
  variables:
    DOCKER_PYTHON_VERSION: "3.10.7"


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."


release-docker-image:
  extends: .docker
  stage: deploy
  needs:
    - build-docker-image-prod
  script:
    - docker pull $DOCKER_IMAGE_FULL_SPECIFIER:prod
    - docker tag $DOCKER_IMAGE_FULL_SPECIFIER:prod $DOCKER_IMAGE_FULL_SPECIFIER:latest
    - docker push $DOCKER_IMAGE_FULL_SPECIFIER:latest


